program = {s-expr}
s-expr = s-expr-value, [ ".", s-expr-type ]
s-expr-value = symbol
             | "(", s-expr, {s-expr}, ")"
s-expr-type = identifier            ; base type / defined type
            | "[", s-expr-type, "]" ; array type
            | "*", s-expr-type      ; pointer type
            | "(", s-expr-type, ")" ; parenthesized type

symbol = identifier | number | string
identifier = letter, { atom }
string = '"', {atom}, '"'
number = digit, {digit}, [".", {digit}]
atom = (letter | digit)

