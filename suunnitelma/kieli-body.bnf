; definition related syntax
; example:
; func f a =
;     printf "foo"
;     f 5
;     a+1

pattern = identifier
        | (identifier, pattern)

definition = identifier, {pattern}, '=', rvalue
rvalue = (expression, newline) | block | lambda
expression = constant                ; constant value
           | identifier {expression} ; function call / variable
           | (expression)            ; parenthesized expression

; evaluate eagerly from top to bottom and return last value (or void)
block = INDENT,
            {assignment | definition},
        DEDENT

lambda = "\", identifier, {identifier}, "->", rvalue

assignment = [identifier, ["::", type], "="], rvalue
